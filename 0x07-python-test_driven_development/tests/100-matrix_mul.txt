test cases for matrix_mul
=========================

import the function
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul


test with two matrices
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

test with None
    >>> matrix_mul([[1, 2], [3, 4]], None)
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list
    >>> matrix_mul(None, [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

test with empty list
    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty
    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty

test with wrong size
    >>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied

test with wrong type
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "4"]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

test with wrong type
    >>> matrix_mul([[1, 2], [3, "4"]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats

test with wrong type
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, []]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

test ma is not a list of lists
    >>> matrix_mul([1, 2], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists

test mb is not a list of lists
    >>> matrix_mul([[1, 2], [3, 4]], [1, 2])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists

test ma each row should be the same size
    >>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size

test mb each row should be the same size
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size

test missing one argument
    >>> matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

test missing two arguments
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
